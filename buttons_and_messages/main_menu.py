from buttons_and_messages.personal_cabinet import WildberriesCabinet, SetUpNotificationTimes, SignatureToTheAnswer, GoToBack
from config import SUPPORT, BOT_NIKNAME, FACE_BOT
from .base_classes import BaseButton, BaseMessage
from utils.states import FSMMainMenuStates, FSMPersonalCabinetStates


class PersonalCabinet(BaseButton):

    def _set_name(self) -> str:
        return '‚öô –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'

    def _set_reply_text(self) -> str:
        return FACE_BOT + '<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:</b>'

    def _set_next_state(self) -> str:
        return FSMPersonalCabinetStates.personal_cabinet

    def _set_children(self) -> list:
        return [WildberriesCabinet(parent_name=self.__class__.__name__),
                SetUpNotificationTimes(parent_name=self.__class__.__name__),
                SignatureToTheAnswer(parent_name=self.__class__.__name__)]


class AnswerManagement(BaseButton):

    def _set_name(self) -> str:
        return 'üìù –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã'

    def _set_reply_text(self) -> str:
        return FACE_BOT + '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞\n'

    async def _set_answer_logic(self, update, state):
        wb_cabinet = WildberriesCabinet(new=False)
        reply_text, next_state = await wb_cabinet._set_answer_logic(update, state)
        self.children_buttons = [button for button in wb_cabinet.children_buttons if button.class_name != 'GoToBack']
        return reply_text, next_state


class MessageOnceForCreateResponseManuallyButton(BaseMessage):

    def _set_state_or_key(self) -> str:
        return 'FSMMainMenuStates:create_response_manually'

    def _set_reply_text(self) -> str:
        return FACE_BOT + '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ'

    def _set_next_state(self) -> str:
        return 'reset_state'

    async def _set_answer_logic(self, update, state) -> tuple[str | None, str | None]:
        wait_msg = await self.bot.send_message(chat_id=update.from_user.id, text=self.default_generate_answer)
        reply_text = '–Ø —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤:\n\n' + await self.ai.reply_feedback(feedback=update.text)
        await self.bot.delete_message(chat_id=update.from_user.id, message_id=wait_msg.message_id)

        return reply_text if reply_text else self.reply_text, self.next_state


class CreateResponseManually(BaseButton):

    def _set_name(self) -> str:
        return '‚úç –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –ø–æ –∫–ª—é—á–µ–≤–∏–∫–∞–º'

    def _set_reply_text(self) -> str:
        return FACE_BOT + '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞, —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç' \
               '\n\n<b>–ü—Ä–∏–º–µ—Ä:</b> –ß–µ—Ö–æ–ª –Ω–∞ iPhone 11. –û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —á–µ—Ö–æ–ª. ' \
               '–ú—è–≥–∫–∏–π, –ø–ª–æ—Ç–Ω–æ —Å–∏–¥–∏—Ç –∏ —Ö–æ—Ä–æ—à–æ –∑–∞—â–∏—â–∞–µ—Ç –∫–∞–º–µ—Ä—É.'

    def _set_next_state(self) -> str:
        return FSMMainMenuStates.create_response_manually

    def _set_messages(self) -> dict:
        message = MessageOnceForCreateResponseManuallyButton(self.button_id)
        return {message.state_or_key: message}


class AboutBot(BaseButton):

    def _set_name(self) -> str:
        return '‚Ñπ –û –±–æ—Ç–µ'

    def _set_reply_text(self) -> str:
        return f"{FACE_BOT} –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é ‚úåÔ∏è" \
               "\n–Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–∑–≤–∞–Ω –ø–æ–º–æ–≥–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–∞–º –ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã –∏ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤. " \
               "–†–∞–±–æ—Ç–∞—é —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ ChatGPT. –ü—Ä–æ—à—É –æ—Ç–Ω–µ—Å—Ç–∏—Å—å —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º " \
               "- —è –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π. –ü–æ—ç—Ç–æ–º—É —è –∏–Ω–æ–≥–¥–∞ –±—É–¥—É –≤—ã—Å—ã–ª–∞—Ç—å –∞–Ω–æ–Ω—Å—ã –ø–æ–ª–µ–∑–Ω—ã—Ö –≤–µ–±–∏–Ω–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ " \
               "Wildberries. –£ –≤–∞—Å –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö –∏ –ø—Ä–æ–∫–∞—á–∞—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è." \
               f"\n\n–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ - {SUPPORT}" \
               "\n\n–í—Å—Ç—É–ø–∞–π—Ç–µ –≤ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ Wildberries - https://t.me/marpla_wildberries" \
               "\n\n–ù–∞—à YouTube –∫–∞–Ω–∞–ª —Å –∫—É—á–µ–π –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏  - https://www.youtube.com/@marpla_ru"


class SupportButton(BaseButton):

    def _set_name(self) -> str:
        return 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞'

    def _set_reply_text(self) -> str | None:
        return None

    def _set_url(self) -> str | None:
        return SUPPORT


class MainMenu(BaseButton):

    def _set_name(self) -> str:
        return '‚Ñπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'

    def _set_reply_text(self) -> str:
        return FACE_BOT + '<b>–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:</b>'

    def _set_next_state(self) -> str:
        return 'reset_state'

    def _set_children(self) -> list:
        return [PersonalCabinet(parent_name=self.__class__.__name__),
                AnswerManagement(parent_name=self.__class__.__name__),
                CreateResponseManually(parent_name=self.__class__.__name__),
                AboutBot(parent_name=self.__class__.__name__),
                SupportButton(parent_name=self.__class__.__name__)]

